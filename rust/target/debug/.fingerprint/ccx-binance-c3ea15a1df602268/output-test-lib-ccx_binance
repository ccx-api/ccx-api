{"$message_type":"diagnostic","message":"unused import: `std::future::Future`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"api/ccx-binance/src/spot/api/websocket/raw.rs","byte_start":4,"byte_end":23,"line_start":1,"line_end":1,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"use std::future::Future;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"api/ccx-binance/src/spot/api/websocket/raw.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::future::Future;","highlight_start":1,"highlight_end":25},{"text":"use std::marker::PhantomData;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::future::Future`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapi/ccx-binance/src/spot/api/websocket/raw.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::future::Future;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `tokio::net::lookup_host`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"api/ccx-binance/src/spot/client/websocket.rs","byte_start":453,"byte_end":476,"line_start":19,"line_end":19,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"use tokio::net::lookup_host;","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"api/ccx-binance/src/spot/client/websocket.rs","byte_start":449,"byte_end":478,"line_start":19,"line_end":20,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use tokio::net::lookup_host;","highlight_start":1,"highlight_end":29},{"text":"use tokio::net::TcpStream;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `tokio::net::lookup_host`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapi/ccx-binance/src/spot/client/websocket.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::net::lookup_host;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `tokio_util::compat::Compat`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"api/ccx-binance/src/spot/client/websocket.rs","byte_start":671,"byte_end":697,"line_start":25,"line_end":25,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use tokio_util::compat::Compat;","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"api/ccx-binance/src/spot/client/websocket.rs","byte_start":667,"byte_end":699,"line_start":25,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use tokio_util::compat::Compat;","highlight_start":1,"highlight_end":32},{"text":"use tokio_util::compat::TokioAsyncReadCompatExt;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `tokio_util::compat::Compat`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapi/ccx-binance/src/spot/client/websocket.rs:25:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio_util::compat::Compat;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"api/ccx-binance/src/spot/api/websocket/raw.rs","byte_start":764,"byte_end":779,"line_start":35,"line_end":35,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        mut stream_base: Url,","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"api/ccx-binance/src/spot/api/websocket/raw.rs","byte_start":764,"byte_end":768,"line_start":35,"line_end":35,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        mut stream_base: Url,","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapi/ccx-binance/src/spot/api/websocket/raw.rs:35:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mut stream_base: Url,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"api/ccx-binance/src/spot/client/websocket.rs","byte_start":3625,"byte_end":3635,"line_start":116,"line_end":116,"column_start":17,"column_end":27,"is_primary":true,"text":[{"text":"            let mut stream = connector.connect(dnsname, stream).await?;","highlight_start":17,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"api/ccx-binance/src/spot/client/websocket.rs","byte_start":3625,"byte_end":3629,"line_start":116,"line_end":116,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let mut stream = connector.connect(dnsname, stream).await?;","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapi/ccx-binance/src/spot/client/websocket.rs:116:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut stream = connector.connect(dnsname, stream).await?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"api/ccx-binance/src/spot/client/websocket.rs","byte_start":5197,"byte_end":5209,"line_start":151,"line_end":151,"column_start":26,"column_end":38,"is_primary":true,"text":[{"text":"            let (sender, mut receiver) = match client.handshake().await? {","highlight_start":26,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"api/ccx-binance/src/spot/client/websocket.rs","byte_start":5197,"byte_end":5201,"line_start":151,"line_end":151,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":"            let (sender, mut receiver) = match client.handshake().await? {","highlight_start":26,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapi/ccx-binance/src/spot/client/websocket.rs:151:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let (sender, mut receiver) = match client.handshake().await? {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot call associated function on trait without specifying the corresponding `impl` type","code":{"code":"E0790","explanation":"You need to specify a specific implementation of the trait in order to call the\nmethod.\n\nErroneous code example:\n\n```compile_fail,E0790\ntrait Coroutine {\n    fn create() -> u32;\n}\n\nstruct Impl;\n\nimpl Coroutine for Impl {\n    fn create() -> u32 { 1 }\n}\n\nstruct AnotherImpl;\n\nimpl Coroutine for AnotherImpl {\n    fn create() -> u32 { 2 }\n}\n\nlet cont: u32 = Coroutine::create();\n// error, impossible to choose one of Coroutine trait implementation\n// Should it be Impl or AnotherImpl, maybe something else?\n```\n\nThis error can be solved by adding type annotations that provide the missing\ninformation to the compiler. In this case, the solution is to use a concrete\ntype:\n\n```\ntrait Coroutine {\n    fn create() -> u32;\n}\n\nstruct AnotherImpl;\n\nimpl Coroutine for AnotherImpl {\n    fn create() -> u32 { 2 }\n}\n\nlet gen1 = AnotherImpl::create();\n\n// if there are multiple methods with same name (different traits)\nlet gen2 = <AnotherImpl as Coroutine>::create();\n```\n"},"level":"error","spans":[{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4709,"byte_end":4734,"line_start":144,"line_end":144,"column_start":53,"column_end":78,"is_primary":true,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":53,"highlight_end":78}],"label":"cannot call associated function of trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use a fully-qualified path to one of the available implementations","code":null,"level":"help","spans":[{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4709,"byte_end":4709,"line_start":144,"line_end":144,"column_start":53,"column_end":53,"is_primary":true,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":53,"highlight_end":53}],"label":null,"suggested_replacement":"<serde_urlencoded::de::Error as ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4726,"byte_end":4726,"line_start":144,"line_end":144,"column_start":70,"column_end":70,"is_primary":true,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":70,"highlight_end":70}],"label":null,"suggested_replacement":">","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4709,"byte_end":4709,"line_start":144,"line_end":144,"column_start":53,"column_end":53,"is_primary":true,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":53,"highlight_end":53}],"label":null,"suggested_replacement":"<std::fmt::Error as ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4726,"byte_end":4726,"line_start":144,"line_end":144,"column_start":70,"column_end":70,"is_primary":true,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":70,"highlight_end":70}],"label":null,"suggested_replacement":">","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4709,"byte_end":4709,"line_start":144,"line_end":144,"column_start":53,"column_end":53,"is_primary":true,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":53,"highlight_end":53}],"label":null,"suggested_replacement":"<doc::Error as ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4726,"byte_end":4726,"line_start":144,"line_end":144,"column_start":70,"column_end":70,"is_primary":true,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":70,"highlight_end":70}],"label":null,"suggested_replacement":">","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4709,"byte_end":4709,"line_start":144,"line_end":144,"column_start":53,"column_end":53,"is_primary":true,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":53,"highlight_end":53}],"label":null,"suggested_replacement":"<serde_urlencoded::ser::Error as ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4726,"byte_end":4726,"line_start":144,"line_end":144,"column_start":70,"column_end":70,"is_primary":true,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":70,"highlight_end":70}],"label":null,"suggested_replacement":">","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4709,"byte_end":4709,"line_start":144,"line_end":144,"column_start":53,"column_end":53,"is_primary":true,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":53,"highlight_end":53}],"label":null,"suggested_replacement":"<serde_json::Error as ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4726,"byte_end":4726,"line_start":144,"line_end":144,"column_start":70,"column_end":70,"is_primary":true,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":70,"highlight_end":70}],"label":null,"suggested_replacement":">","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0790]\u001b[0m\u001b[0m\u001b[1m: cannot call associated function on trait without specifying the corresponding `impl` type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapi/ccx-binance/src/spot/types/ws_stream_name.rs:144:53\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot call associated function of trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use a fully-qualified path to one of the available implementations\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    write!(f, \"{}\", levels).map_err(\u001b[0m\u001b[0m\u001b[38;5;10m<serde_urlencoded::de::Error as \u001b[0m\u001b[0mserde::ser::Error\u001b[0m\u001b[0m\u001b[38;5;10m>\u001b[0m\u001b[0m::custom)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    write!(f, \"{}\", levels).map_err(\u001b[0m\u001b[0m\u001b[38;5;10m<std::fmt::Error as \u001b[0m\u001b[0mserde::ser::Error\u001b[0m\u001b[0m\u001b[38;5;10m>\u001b[0m\u001b[0m::custom)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    write!(f, \"{}\", levels).map_err(\u001b[0m\u001b[0m\u001b[38;5;10m<doc::Error as \u001b[0m\u001b[0mserde::ser::Error\u001b[0m\u001b[0m\u001b[38;5;10m>\u001b[0m\u001b[0m::custom)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    write!(f, \"{}\", levels).map_err(\u001b[0m\u001b[0m\u001b[38;5;10m<serde_urlencoded::ser::Error as \u001b[0m\u001b[0mserde::ser::Error\u001b[0m\u001b[0m\u001b[38;5;10m>\u001b[0m\u001b[0m::custom)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++++++++++++\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\u001b[0m      and 1 other candidate\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type annotations needed","code":{"code":"E0283","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0283\nlet x = \"hello\".chars().rev().collect();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nA common example is the `collect` method on `Iterator`. It has a generic type\nparameter with a `FromIterator` bound, which for a `char` iterator is\nimplemented by `Vec` and `String` among others. Consider the following snippet\nthat reverses the characters of a string:\n\nIn the first code example, the compiler cannot infer what the type of `x` should\nbe: `Vec<char>` and `String` are both suitable candidates. To specify which type\nto use, you can use a type annotation on `x`:\n\n```\nlet x: Vec<char> = \"hello\".chars().rev().collect();\n```\n\nIt is not necessary to annotate the full type. Once the ambiguity is resolved,\nthe compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nWe can see a self-contained example below:\n\n```compile_fail,E0283\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = foo.into() * 1u32;\n```\n\nThis error can be solved by adding type annotations that provide the missing\ninformation to the compiler. In this case, the solution is to specify the\ntrait's type parameter:\n\n```\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = Into::<u32>::into(foo) * 1u32;\n```\n"},"level":"error","spans":[{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4735,"byte_end":4736,"line_start":144,"line_end":144,"column_start":79,"column_end":80,"is_primary":false,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":79,"highlight_end":80}],"label":"type must be known at this point","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4735,"byte_end":4736,"line_start":144,"line_end":144,"column_start":79,"column_end":80,"is_primary":false,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":79,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of operator `?`","def_site_span":{"file_name":"api/ccx-binance/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4701,"byte_end":4708,"line_start":144,"line_end":144,"column_start":45,"column_end":52,"is_primary":true,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":45,"highlight_end":52}],"label":"cannot infer type of the type parameter `F` declared on the method `map_err`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"multiple `impl`s satisfying `std::fmt::Error: From<_>` found in the following crates: `core`, `openssl`:\n- impl From<openssl::error::ErrorStack> for std::fmt::Error;\n- impl<T> From<T> for T;","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `Result<(), std::fmt::Error>` to implement `FromResidual<Result<Infallible, _>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider specifying the generic arguments","code":null,"level":"help","spans":[{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4708,"byte_end":4708,"line_start":144,"line_end":144,"column_start":52,"column_end":52,"is_primary":true,"text":[{"text":"                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;","highlight_start":52,"highlight_end":52}],"label":null,"suggested_replacement":"::<F, _>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0283]\u001b[0m\u001b[0m\u001b[1m: type annotations needed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapi/ccx-binance/src/spot/types/ws_stream_name.rs:144:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    write!(f, \"{}\", levels).map_err(serde::ser::Error::custom)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mtype must be known at this point\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot infer type of the type parameter `F` declared on the method `map_err`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: multiple `impl`s satisfying `std::fmt::Error: From<_>` found in the following crates: `core`, `openssl`:\u001b[0m\n\u001b[0m            - impl From<openssl::error::ErrorStack> for std::fmt::Error;\u001b[0m\n\u001b[0m            - impl<T> From<T> for T;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `Result<(), std::fmt::Error>` to implement `FromResidual<Result<Infallible, _>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider specifying the generic arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    write!(f, \"{}\", levels).map_err\u001b[0m\u001b[0m\u001b[38;5;10m::<F, _>\u001b[0m\u001b[0m(serde::ser::Error::custom)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::fmt::Write`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":4640,"byte_end":4655,"line_start":143,"line_end":143,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"                    use std::fmt::Write;","highlight_start":25,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fmt::Write`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapi/ccx-binance/src/spot/types/ws_stream_name.rs:143:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    use std::fmt::Write;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":5140,"byte_end":5148,"line_start":161,"line_end":161,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let mut name: SmartString<254> = self.to_fmt();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"api/ccx-binance/src/spot/types/ws_stream_name.rs","byte_start":5140,"byte_end":5144,"line_start":161,"line_end":161,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut name: SmartString<254> = self.to_fmt();","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mapi/ccx-binance/src/spot/types/ws_stream_name.rs:161:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut name: SmartString<254> = self.to_fmt();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 2 previous errors; 8 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors; 8 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0283, E0790.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0283, E0790.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0283`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0283`.\u001b[0m\n"}
